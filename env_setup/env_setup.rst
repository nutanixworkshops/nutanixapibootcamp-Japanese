.. _env_setup:

----------------------
API: 演習環境の準備
----------------------

概要
++++++++

ここではどのようにAPIのリクエストをテストするかについて扱います。
他の開発系トピックにも共通することですが、実現手法はいくつかあります。
このラボではAPIのテスト手法で最も一般的なツールである「Postman」を利用します。
はじめにクラスタに用意されているツールとして利用する Windows Tool VM にPostmanをインストールします。

.. note::

   想定される所要時間: **5-20 分**

ラボ準備
+++++++++

このラボでは :ref:`windows_tools_vm` に用意されているツール群を利用します。

もしこのVMがまだ展開されていなければ、次に進む前に上記リンクを参照してご用意してください。

Postmanを使う環境の準備
+++++++++++++++++++++++++

Postmanの起動
.................

まずTool VMにてPostmanを起動してください。
インストールされていなければ、Chrome等で検索しインストール作業を行なってください。
受講者の方がPostmanを利用したことがなければ、以下のような画面でPostmanのアカウントの作成が促されます。
アカウントの作成はNutanixの演習の実行やPostmanの日々の利用において必須ではありませんが、もしPostmanを複数のマシンで利用するのであれば登録しておくと便利です。

#. すでにPostmanのアカウントを持っているのであれば、 **Sign In** リンクからログインしてください。

#. アカウント作成やログインをしたくなければ、 **Skip signing up and take me straight to the app** リンクを押して進めてください。

   .. figure:: images/postman_setup_001.png

   .. note::

     このラボで提示されるスクリーンショットはログインの有無に依存していません。また、表示されているスクリーンショットはPostmanのダークモードで撮影されています。テーマの設定はスパナのアイコンの設定ボタンからテーマタブでダークモードを選ぶことで変更できます。

Postmanの利用について
.............

#. 別の方法でAPIのリクエストを実施できますが、このラボでは今後のラボを円滑に実施することを目的にPostmanを利用します。
なお、ハイライトされている **Request** リンクはまだクリックしないでください。

#. **X** ボタンを押して現在開いているウィンドウを閉じてください。

#. 以下のスクリーンショットでは今後のラボで利用する主要な箇所をハイライトしています。これらはPostmanを習熟するうえにおいて最も重要な箇所です。これら以外にもPostmanは単なるAPIのリクエストを投げる以外の様々な機能を持っています。

   .. figure:: images/postman_001.png

#. 1 から 8 までのハイライトされている場所はそれぞれ以下のような役割を持っています。

    - それぞれのタブは別々のリクエストの設定を保持します。これは複数のリクエスト設定を管理し、「リクエストAの次にB、その次にA」などとする際に毎回設定をしなおす手間を省いてくれます。
    - 「+」ボタンは新しいリクエストの設定を作ります。「...」というボタンは設定タブをコピーしたり、最近閉じたタブを再度開く場合に利用します。
    - 現在は **GET** が表示されています。これはリクエストの種類を変更する際に利用します。たとえば、一般的なリクエストの種類はGET, POST, PUT と DELETE です。
    - リクエストのURLです。たとえばNutanixのREST APIのリクエストは通常は以下のようなものから始まります。: **https://<ip_address_or_fqdn>:9440/api/nutanix/<api_version_or_name>/<entity>**
    - **Authorization** タブはリクエストに対してユーザー名とパスワードを設定するために使われます。Nutanix の REST API を利用する場合、すべてのリクエストは **ベーシック認証** が必要です。これはユーザー名とパスワードのペアです。
    - **Body** はリクエストのペイロードを設定するための場所です。リクエストのペイロードは一般的にAPIのリクエストに必要なパラメーターや追加情報を格納しています。これは受講者の方がAPIを使って仮想マシンを作成する際に利用します。
    - **Send** ボタンはその名が示すとおり、設定した様々な情報を含むリクエストを指定されたIPやDNS名にたいして送信します。
    - 最後のレスポンス表示エリアは整形されたJSONが表示される場所です。レスポンスエリアを見ることで、成功したレスポンスが得られているか、もし失敗した場合はなぜ失敗したかといった情報が得られます。

#. (訳注:これ以後は続く演習で実施してください)。全ての準備が整ったら、リクエストを送信してレスポンスを確認することができます。 **Send** ボタンをクリックしてください。

   .. note::

      もし **Could not get any response** というようなレスポンスを受け取ったのであれば、Postmanに対するSSL証明書の承認設定を変更する必要の可能性があります。以下のように設定してください。:

        - Postman の設定アイコン(ウィンドウ右上のスパナマーク)をクリックします。
        - **Settings** を選択します。

        .. image::  images/postman_ssl_001.png

        -  **SSL certification verification** のチェックマークを外します。

        .. image::  images/postman_ssl_002.png

        - ダイアログを **X** ボタンを押して閉じます。
